# 📘 TIL - 2025-05-12

## 📌 주제: Swift 함수(Function)

Swift에서 함수의 개념과 작성법, 그리고 다양한 실습 예제를 통해 함수 활용법을 학습했다.  
함수는 코드의 **재사용성**, **가독성**, **유지보수성**을 높이는 핵심 요소임을 이해하게 되었다.

---

## ✅ 오늘 배운 내용 요약

- 함수는 특정 작업을 수행하는 코드의 묶음
- 반복되는 로직을 줄이고, 유지보수를 용이하게 해줌
- 함수 정의 시 `매개변수`, `반환값`을 명확히 설정해야 함
- 함수 이름은 기능을 명확히 표현하도록 작성

---

## 실습 코드

### 두 수를 더하는 함수

```swift
func addNumbers(num1: Int, num2: Int) -> Int {
    return num1 + num2
}

let sum = addNumbers(num1: 1, num2: 4)
print("합계: \(sum)")

### 두 수를 비교하는 함수

```swift
func numbersComparison(num1: Int, num2: Int) -> Int {
    if num1 > num2 {
            return num1
            
    } else if num1 == num2 {
            return num1 
            
    } else {
            return num2
    }
}

let result = numbersComparison(num1: 25, num2: 10)
print("더큰수: \(result)")

### 평균 계산 함수

```swift
func calculateAverage(score1: Int, score2: Int, score3: Int) -> Double {
    let total = score1 + score2 + score3
    return Double(total) / 3.0
}

let average = calculateAverage(score1: 15, score2: 45, score3: 100)
print("평균 점수: \(average)")

###  구구단 출력 함수

```swift
func printMultiplicationTable(number: Int) {
    for i in 1...9 {
        print("\(number) x \(i) = \(number * i)")
    }
}

printMultiplicationTable(number: 9)


---

## 느낀 점

    •   함수 단위로 코드를 분리하면 전체 흐름을 이해하기 쉬워진다.
    •   함수 이름을 명확히 지으면 가독성이 크게 향상된다.
    •   앞으로 반복되는 코드나 특정 기능이 있는 경우, 반드시 함수로 추출할 것.

---